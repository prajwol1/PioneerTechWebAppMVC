@model PioneerTechSystem.Models.Project

@{
    ViewBag.Title = "Project Details";
}

<h2>Employee Project Details</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>You can save a new employee project information or update existing employee details here.</h4>
        If you want to add a completely new employee inforation, please enter data in @Html.ActionLink("Employee Details", "Create", "Employee") page to continue.
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <span class="return-message">
            @ViewBag.ReturnMessage
        </span>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(model => model.EmployeeID, "Employee ID", htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Html.DropDownList("EmployeeID", null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ProjectLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Html.EditorFor(model => model.ProjectLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectLocation, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ProjectRoles, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Html.EditorFor(model => model.ProjectRoles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectRoles, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>

                </td>
                <td>                
                    <input type="submit" value="Save/Update" class="btn btn-default" />
                </td>
                </tr>
            </table>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
